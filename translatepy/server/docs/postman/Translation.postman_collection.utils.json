{"info":{"name":"Translation","description":"All of the endpoints under the 'Translation' section of the translatepy API Interface","schema":"https://schema.getpostman.com/json/collection/v2.1.0/collection.json"},"item":[{"name":"Translate","event":[],"request":{"method":"GET","header":[],"url":{"raw":"{{DOMAIN}}/translate?=text&dest&source&translators","host":["{{DOMAIN}}"],"path":["translate"],"query":[{"key":"text","value":"<text:str>","description":"The text to translate"},{"key":"dest","value":"<dest:str>","description":"The destination language"},{"key":"source","value":"<source:str>","description":"The source language"},{"key":"translators","value":"<translators:TranslatorList>","description":"The translator(s) to use. When providing multiple translators, the names should be comma-separated."}]},"description":"\n> [translatepy/server/translation.py](../../translatepy/server/translation.py#L32)\n\n\n        Translates the given text to the given language\n\n        i.e Good morning (en) --> おはようございます (ja)\n        \n\n\n### Authentication\n\nLogin is **not** required\n\n### Response\n\n#### Example Response\n\n```json\n{\n    \"success\": true,\n    \"message\": \"Successfully processed your request\",\n    \"error\": null,\n    \"data\": {\n        \"service\": \"Google\",\n        \"source\": \"Hello world\",\n        \"sourceLang\": \"English\",\n        \"destLang\": \"Japanese\",\n        \"result\": \"こんにちは世界\"\n    }\n}\n\n```\n\n#### Returns\n\n| Field        | Description                      | Type   | Nullable  |\n| ----------   | -------------------------------- | ------ | --------- |\n| `service` | The translator used  | str      | False      |\n| `source` | The source text  | str      | False      |\n| `sourceLang` | The source language  | str      | False      |\n| `destLang` | The destination language  | str      | False      |\n| `result` | The translated text  | str      | False      |\n\n#### Possible Errors\n\n| Exception         | Description                      | Code   |\n| ---------------   | -------------------------------- | ------ |\n| `TRANSLATEPY_EXCEPTION` | Generic exception raised when an error occured on translatepy. This is the base class for the other exceptions raised by translatepy.  | 500  |\n| `NO_RESULT` | When no result is returned from the translator(s)  | 500  |\n| `PARAMETER_ERROR` | When a parameter is missing or invalid  | 500  |\n| `PARAMETER_TYPE_ERROR` | When a parameter is of the wrong type  | 500  |\n| `PARAMETER_VALUE_ERROR` | When a parameter is of the wrong value  | 500  |\n| `TRANSLATION_ERROR` | When a translation error occurs  | 500  |\n| `UNKNOWN_LANGUAGE` | When one of the provided language could not be understood by translatepy. Extra information like the string similarity and the most similar string are provided in `data`.  | 400  |\n| `UNKNOWN_TRANSLATOR` | When one of the provided translator/service could not be understood by translatepy. Extra information like the string similarity and the most similar string are provided in `data`.  | 400  |\n[Return to the Index](../Getting%20Started.md#index)","auth":{"type":"noauth"}},"response":[{"name":"Translate","event":[],"request":{"method":"GET","header":[],"url":{"raw":"{{DOMAIN}}/translate?=text&dest&source&translators","host":["{{DOMAIN}}"],"path":["translate"],"query":[{"key":"text","value":"<text:str>","description":"The text to translate"},{"key":"dest","value":"<dest:str>","description":"The destination language"},{"key":"source","value":"<source:str>","description":"The source language"},{"key":"translators","value":"<translators:TranslatorList>","description":"The translator(s) to use. When providing multiple translators, the names should be comma-separated."}]},"description":"\n> [translatepy/server/translation.py](../../translatepy/server/translation.py#L32)\n\n\n        Translates the given text to the given language\n\n        i.e Good morning (en) --> おはようございます (ja)\n        \n\n\n### Authentication\n\nLogin is **not** required\n\n### Response\n\n#### Example Response\n\n```json\n{\n    \"success\": true,\n    \"message\": \"Successfully processed your request\",\n    \"error\": null,\n    \"data\": {\n        \"service\": \"Google\",\n        \"source\": \"Hello world\",\n        \"sourceLang\": \"English\",\n        \"destLang\": \"Japanese\",\n        \"result\": \"こんにちは世界\"\n    }\n}\n\n```\n\n#### Returns\n\n| Field        | Description                      | Type   | Nullable  |\n| ----------   | -------------------------------- | ------ | --------- |\n| `service` | The translator used  | str      | False      |\n| `source` | The source text  | str      | False      |\n| `sourceLang` | The source language  | str      | False      |\n| `destLang` | The destination language  | str      | False      |\n| `result` | The translated text  | str      | False      |\n\n#### Possible Errors\n\n| Exception         | Description                      | Code   |\n| ---------------   | -------------------------------- | ------ |\n| `TRANSLATEPY_EXCEPTION` | Generic exception raised when an error occured on translatepy. This is the base class for the other exceptions raised by translatepy.  | 500  |\n| `NO_RESULT` | When no result is returned from the translator(s)  | 500  |\n| `PARAMETER_ERROR` | When a parameter is missing or invalid  | 500  |\n| `PARAMETER_TYPE_ERROR` | When a parameter is of the wrong type  | 500  |\n| `PARAMETER_VALUE_ERROR` | When a parameter is of the wrong value  | 500  |\n| `TRANSLATION_ERROR` | When a translation error occurs  | 500  |\n| `UNKNOWN_LANGUAGE` | When one of the provided language could not be understood by translatepy. Extra information like the string similarity and the most similar string are provided in `data`.  | 400  |\n| `UNKNOWN_TRANSLATOR` | When one of the provided translator/service could not be understood by translatepy. Extra information like the string similarity and the most similar string are provided in `data`.  | 400  |\n[Return to the Index](../Getting%20Started.md#index)"},"response":[],"status":"OK","code":200,"_postman_previewlanguage":"json","header":[],"cookie":[],"body":"{\n    \"success\": true,\n    \"message\": \"Successfully processed your request\",\n    \"error\": null,\n    \"data\": {\n        \"service\": \"Google\",\n        \"source\": \"Hello world\",\n        \"sourceLang\": \"English\",\n        \"destLang\": \"Japanese\",\n        \"result\": \"こんにちは世界\"\n    }\n}\n"}]},{"name":"Transliterate","event":[],"request":{"method":"GET","header":[],"url":{"raw":"{{DOMAIN}}/transliterate?=text&dest&source&translators","host":["{{DOMAIN}}"],"path":["transliterate"],"query":[{"key":"text","value":"<text:str>","description":"The text to transliterate"},{"key":"dest","value":"<dest:str>","description":"The destination language"},{"key":"source","value":"<source:str>","description":"The source language"},{"key":"translators","value":"<translators:TranslatorList>","description":"The translator(s) to use. When providing multiple translators, the names should be comma-separated."}]},"description":"\n> [translatepy/server/translation.py](../../translatepy/server/translation.py#L87)\n\n\n        Transliterates the given text, get its pronunciation\n\n        i.e おはよう --> Ohayou\n        \n\n\n### Authentication\n\nLogin is **not** required\n\n### Response\n\n#### Example Response\n\n```json\n{\n    \"success\": true,\n    \"message\": \"Successfully processed your request\",\n    \"error\": null,\n    \"data\": {\n        \"service\": \"Google\",\n        \"source\": \"おはよう\",\n        \"sourceLang\": \"Japanese\",\n        \"destLang\": \"English\",\n        \"result\": \"Ohayou\"\n    }\n}\n\n```\n\n#### Returns\n\n| Field        | Description                      | Type   | Nullable  |\n| ----------   | -------------------------------- | ------ | --------- |\n| `service` | The translator used  | str      | False      |\n| `source` | The source text  | str      | False      |\n| `sourceLang` | The source language  | str      | False      |\n| `destLang` | The destination language  | str      | False      |\n| `result` | The transliteration  | str      | False      |\n\n#### Possible Errors\n\n| Exception         | Description                      | Code   |\n| ---------------   | -------------------------------- | ------ |\n| `TRANSLATEPY_EXCEPTION` | Generic exception raised when an error occured on translatepy. This is the base class for the other exceptions raised by translatepy.  | 500  |\n| `NO_RESULT` | When no result is returned from the translator(s)  | 500  |\n| `PARAMETER_ERROR` | When a parameter is missing or invalid  | 500  |\n| `PARAMETER_TYPE_ERROR` | When a parameter is of the wrong type  | 500  |\n| `PARAMETER_VALUE_ERROR` | When a parameter is of the wrong value  | 500  |\n| `TRANSLATION_ERROR` | When a translation error occurs  | 500  |\n| `UNKNOWN_LANGUAGE` | When one of the provided language could not be understood by translatepy. Extra information like the string similarity and the most similar string are provided in `data`.  | 400  |\n| `UNKNOWN_TRANSLATOR` | When one of the provided translator/service could not be understood by translatepy. Extra information like the string similarity and the most similar string are provided in `data`.  | 400  |\n[Return to the Index](../Getting%20Started.md#index)","auth":{"type":"noauth"}},"response":[{"name":"Transliterate","event":[],"request":{"method":"GET","header":[],"url":{"raw":"{{DOMAIN}}/transliterate?=text&dest&source&translators","host":["{{DOMAIN}}"],"path":["transliterate"],"query":[{"key":"text","value":"<text:str>","description":"The text to transliterate"},{"key":"dest","value":"<dest:str>","description":"The destination language"},{"key":"source","value":"<source:str>","description":"The source language"},{"key":"translators","value":"<translators:TranslatorList>","description":"The translator(s) to use. When providing multiple translators, the names should be comma-separated."}]},"description":"\n> [translatepy/server/translation.py](../../translatepy/server/translation.py#L87)\n\n\n        Transliterates the given text, get its pronunciation\n\n        i.e おはよう --> Ohayou\n        \n\n\n### Authentication\n\nLogin is **not** required\n\n### Response\n\n#### Example Response\n\n```json\n{\n    \"success\": true,\n    \"message\": \"Successfully processed your request\",\n    \"error\": null,\n    \"data\": {\n        \"service\": \"Google\",\n        \"source\": \"おはよう\",\n        \"sourceLang\": \"Japanese\",\n        \"destLang\": \"English\",\n        \"result\": \"Ohayou\"\n    }\n}\n\n```\n\n#### Returns\n\n| Field        | Description                      | Type   | Nullable  |\n| ----------   | -------------------------------- | ------ | --------- |\n| `service` | The translator used  | str      | False      |\n| `source` | The source text  | str      | False      |\n| `sourceLang` | The source language  | str      | False      |\n| `destLang` | The destination language  | str      | False      |\n| `result` | The transliteration  | str      | False      |\n\n#### Possible Errors\n\n| Exception         | Description                      | Code   |\n| ---------------   | -------------------------------- | ------ |\n| `TRANSLATEPY_EXCEPTION` | Generic exception raised when an error occured on translatepy. This is the base class for the other exceptions raised by translatepy.  | 500  |\n| `NO_RESULT` | When no result is returned from the translator(s)  | 500  |\n| `PARAMETER_ERROR` | When a parameter is missing or invalid  | 500  |\n| `PARAMETER_TYPE_ERROR` | When a parameter is of the wrong type  | 500  |\n| `PARAMETER_VALUE_ERROR` | When a parameter is of the wrong value  | 500  |\n| `TRANSLATION_ERROR` | When a translation error occurs  | 500  |\n| `UNKNOWN_LANGUAGE` | When one of the provided language could not be understood by translatepy. Extra information like the string similarity and the most similar string are provided in `data`.  | 400  |\n| `UNKNOWN_TRANSLATOR` | When one of the provided translator/service could not be understood by translatepy. Extra information like the string similarity and the most similar string are provided in `data`.  | 400  |\n[Return to the Index](../Getting%20Started.md#index)"},"response":[],"status":"OK","code":200,"_postman_previewlanguage":"json","header":[],"cookie":[],"body":"{\n    \"success\": true,\n    \"message\": \"Successfully processed your request\",\n    \"error\": null,\n    \"data\": {\n        \"service\": \"Google\",\n        \"source\": \"おはよう\",\n        \"sourceLang\": \"Japanese\",\n        \"destLang\": \"English\",\n        \"result\": \"Ohayou\"\n    }\n}\n"}]},{"name":"Spellcheck","event":[],"request":{"method":"GET","header":[],"url":{"raw":"{{DOMAIN}}/spellcheck?=text&source&translators","host":["{{DOMAIN}}"],"path":["spellcheck"],"query":[{"key":"text","value":"<text:str>","description":"The text to spellcheck"},{"key":"source","value":"<source:str>","description":"The source language"},{"key":"translators","value":"<translators:TranslatorList>","description":"The translator(s) to use. When providing multiple translators, the names should be comma-separated."}]},"description":"\n> [translatepy/server/translation.py](../../translatepy/server/translation.py#L142)\n\n\n        Checks the spelling of a given text\n\n        i.e God morning --> Good morning\n        \n\n\n### Authentication\n\nLogin is **not** required\n\n### Response\n\n#### Example Response\n\n```json\n{\n    \"success\": true,\n    \"message\": \"Successfully processed your request\",\n    \"error\": null,\n    \"data\": {\n        \"service\": \"Google\",\n        \"source\": \"God morning\",\n        \"sourceLang\": \"English\",\n        \"result\": \"Good morning\"\n    }\n}\n\n```\n\n#### Returns\n\n| Field        | Description                      | Type   | Nullable  |\n| ----------   | -------------------------------- | ------ | --------- |\n| `service` | The translator used  | str      | False      |\n| `source` | The source text  | str      | False      |\n| `sourceLang` | The source language  | str      | False      |\n| `result` | The spellchecked text  | str      | False      |\n\n#### Possible Errors\n\n| Exception         | Description                      | Code   |\n| ---------------   | -------------------------------- | ------ |\n| `TRANSLATEPY_EXCEPTION` | Generic exception raised when an error occured on translatepy. This is the base class for the other exceptions raised by translatepy.  | 500  |\n| `NO_RESULT` | When no result is returned from the translator(s)  | 500  |\n| `PARAMETER_ERROR` | When a parameter is missing or invalid  | 500  |\n| `PARAMETER_TYPE_ERROR` | When a parameter is of the wrong type  | 500  |\n| `PARAMETER_VALUE_ERROR` | When a parameter is of the wrong value  | 500  |\n| `TRANSLATION_ERROR` | When a translation error occurs  | 500  |\n| `UNKNOWN_LANGUAGE` | When one of the provided language could not be understood by translatepy. Extra information like the string similarity and the most similar string are provided in `data`.  | 400  |\n| `UNKNOWN_TRANSLATOR` | When one of the provided translator/service could not be understood by translatepy. Extra information like the string similarity and the most similar string are provided in `data`.  | 400  |\n[Return to the Index](../Getting%20Started.md#index)","auth":{"type":"noauth"}},"response":[{"name":"Spellcheck","event":[],"request":{"method":"GET","header":[],"url":{"raw":"{{DOMAIN}}/spellcheck?=text&source&translators","host":["{{DOMAIN}}"],"path":["spellcheck"],"query":[{"key":"text","value":"<text:str>","description":"The text to spellcheck"},{"key":"source","value":"<source:str>","description":"The source language"},{"key":"translators","value":"<translators:TranslatorList>","description":"The translator(s) to use. When providing multiple translators, the names should be comma-separated."}]},"description":"\n> [translatepy/server/translation.py](../../translatepy/server/translation.py#L142)\n\n\n        Checks the spelling of a given text\n\n        i.e God morning --> Good morning\n        \n\n\n### Authentication\n\nLogin is **not** required\n\n### Response\n\n#### Example Response\n\n```json\n{\n    \"success\": true,\n    \"message\": \"Successfully processed your request\",\n    \"error\": null,\n    \"data\": {\n        \"service\": \"Google\",\n        \"source\": \"God morning\",\n        \"sourceLang\": \"English\",\n        \"result\": \"Good morning\"\n    }\n}\n\n```\n\n#### Returns\n\n| Field        | Description                      | Type   | Nullable  |\n| ----------   | -------------------------------- | ------ | --------- |\n| `service` | The translator used  | str      | False      |\n| `source` | The source text  | str      | False      |\n| `sourceLang` | The source language  | str      | False      |\n| `result` | The spellchecked text  | str      | False      |\n\n#### Possible Errors\n\n| Exception         | Description                      | Code   |\n| ---------------   | -------------------------------- | ------ |\n| `TRANSLATEPY_EXCEPTION` | Generic exception raised when an error occured on translatepy. This is the base class for the other exceptions raised by translatepy.  | 500  |\n| `NO_RESULT` | When no result is returned from the translator(s)  | 500  |\n| `PARAMETER_ERROR` | When a parameter is missing or invalid  | 500  |\n| `PARAMETER_TYPE_ERROR` | When a parameter is of the wrong type  | 500  |\n| `PARAMETER_VALUE_ERROR` | When a parameter is of the wrong value  | 500  |\n| `TRANSLATION_ERROR` | When a translation error occurs  | 500  |\n| `UNKNOWN_LANGUAGE` | When one of the provided language could not be understood by translatepy. Extra information like the string similarity and the most similar string are provided in `data`.  | 400  |\n| `UNKNOWN_TRANSLATOR` | When one of the provided translator/service could not be understood by translatepy. Extra information like the string similarity and the most similar string are provided in `data`.  | 400  |\n[Return to the Index](../Getting%20Started.md#index)"},"response":[],"status":"OK","code":200,"_postman_previewlanguage":"json","header":[],"cookie":[],"body":"{\n    \"success\": true,\n    \"message\": \"Successfully processed your request\",\n    \"error\": null,\n    \"data\": {\n        \"service\": \"Google\",\n        \"source\": \"God morning\",\n        \"sourceLang\": \"English\",\n        \"result\": \"Good morning\"\n    }\n}\n"}]},{"name":"Language","event":[],"request":{"method":"GET","header":[],"url":{"raw":"{{DOMAIN}}/language?=text&translators","host":["{{DOMAIN}}"],"path":["language"],"query":[{"key":"text","value":"<text:str>","description":"The text to get the language of"},{"key":"translators","value":"<translators:TranslatorList>","description":"The translator(s) to use. When providing multiple translators, the names should be comma-separated."}]},"description":"\n> [translatepy/server/translation.py](../../translatepy/server/translation.py#L194)\n\n\n        Returns the language of the given text\n\n        i.e 皆さんおはようございます！ --> Japanese\n        \n\n\n### Authentication\n\nLogin is **not** required\n\n### Response\n\n#### Example Response\n\n```json\n{\n    \"success\": true,\n    \"message\": \"Successfully processed your request\",\n    \"error\": null,\n    \"data\": {\n        \"service\": \"Google\",\n        \"source\": \"Hello world\",\n        \"result\": \"jpa\"\n    }\n}\n\n```\n\n#### Returns\n\n| Field        | Description                      | Type   | Nullable  |\n| ----------   | -------------------------------- | ------ | --------- |\n| `service` | The translator used  | str      | False      |\n| `source` | The source text  | str      | False      |\n| `result` | The resulting language alpha-3 code  | str      | False      |\n\n#### Possible Errors\n\n| Exception         | Description                      | Code   |\n| ---------------   | -------------------------------- | ------ |\n| `TRANSLATEPY_EXCEPTION` | Generic exception raised when an error occured on translatepy. This is the base class for the other exceptions raised by translatepy.  | 500  |\n| `NO_RESULT` | When no result is returned from the translator(s)  | 500  |\n| `PARAMETER_ERROR` | When a parameter is missing or invalid  | 500  |\n| `PARAMETER_TYPE_ERROR` | When a parameter is of the wrong type  | 500  |\n| `PARAMETER_VALUE_ERROR` | When a parameter is of the wrong value  | 500  |\n| `TRANSLATION_ERROR` | When a translation error occurs  | 500  |\n| `UNKNOWN_LANGUAGE` | When one of the provided language could not be understood by translatepy. Extra information like the string similarity and the most similar string are provided in `data`.  | 400  |\n| `UNKNOWN_TRANSLATOR` | When one of the provided translator/service could not be understood by translatepy. Extra information like the string similarity and the most similar string are provided in `data`.  | 400  |\n[Return to the Index](../Getting%20Started.md#index)","auth":{"type":"noauth"}},"response":[{"name":"Language","event":[],"request":{"method":"GET","header":[],"url":{"raw":"{{DOMAIN}}/language?=text&translators","host":["{{DOMAIN}}"],"path":["language"],"query":[{"key":"text","value":"<text:str>","description":"The text to get the language of"},{"key":"translators","value":"<translators:TranslatorList>","description":"The translator(s) to use. When providing multiple translators, the names should be comma-separated."}]},"description":"\n> [translatepy/server/translation.py](../../translatepy/server/translation.py#L194)\n\n\n        Returns the language of the given text\n\n        i.e 皆さんおはようございます！ --> Japanese\n        \n\n\n### Authentication\n\nLogin is **not** required\n\n### Response\n\n#### Example Response\n\n```json\n{\n    \"success\": true,\n    \"message\": \"Successfully processed your request\",\n    \"error\": null,\n    \"data\": {\n        \"service\": \"Google\",\n        \"source\": \"Hello world\",\n        \"result\": \"jpa\"\n    }\n}\n\n```\n\n#### Returns\n\n| Field        | Description                      | Type   | Nullable  |\n| ----------   | -------------------------------- | ------ | --------- |\n| `service` | The translator used  | str      | False      |\n| `source` | The source text  | str      | False      |\n| `result` | The resulting language alpha-3 code  | str      | False      |\n\n#### Possible Errors\n\n| Exception         | Description                      | Code   |\n| ---------------   | -------------------------------- | ------ |\n| `TRANSLATEPY_EXCEPTION` | Generic exception raised when an error occured on translatepy. This is the base class for the other exceptions raised by translatepy.  | 500  |\n| `NO_RESULT` | When no result is returned from the translator(s)  | 500  |\n| `PARAMETER_ERROR` | When a parameter is missing or invalid  | 500  |\n| `PARAMETER_TYPE_ERROR` | When a parameter is of the wrong type  | 500  |\n| `PARAMETER_VALUE_ERROR` | When a parameter is of the wrong value  | 500  |\n| `TRANSLATION_ERROR` | When a translation error occurs  | 500  |\n| `UNKNOWN_LANGUAGE` | When one of the provided language could not be understood by translatepy. Extra information like the string similarity and the most similar string are provided in `data`.  | 400  |\n| `UNKNOWN_TRANSLATOR` | When one of the provided translator/service could not be understood by translatepy. Extra information like the string similarity and the most similar string are provided in `data`.  | 400  |\n[Return to the Index](../Getting%20Started.md#index)"},"response":[],"status":"OK","code":200,"_postman_previewlanguage":"json","header":[],"cookie":[],"body":"{\n    \"success\": true,\n    \"message\": \"Successfully processed your request\",\n    \"error\": null,\n    \"data\": {\n        \"service\": \"Google\",\n        \"source\": \"Hello world\",\n        \"result\": \"jpa\"\n    }\n}\n"}]},{"name":"Text to Speech","event":[],"request":{"method":"GET","header":[],"url":{"raw":"{{DOMAIN}}/tts?=text&source&speed&gender&translators","host":["{{DOMAIN}}"],"path":["tts"],"query":[{"key":"text","value":"<text:str>","description":"The text to convert to speech"},{"key":"source","value":"<source:str>","description":"The source language"},{"key":"speed","value":"<speed:int>","description":"The speed of the speech"},{"key":"gender","value":"<gender:str>","description":"The gender of the speech"},{"key":"translators","value":"<translators:TranslatorList>","description":"The translator(s) to use. When providing multiple translators, the names should be comma-separated."}]},"description":"\n> [translatepy/server/translation.py](../../translatepy/server/translation.py#L233)\n\n\n        Gives back the text to speech result for the given text\n\n        Args:\n          text: the given text\n          source_language: the source language\n\n        Returns:\n            the mp3 file as bytes\n\n        Example:\n            >>> from translatepy import Translator\n            >>> t = Translator()\n            >>> result = t.text_to_speech(\"Hello, how are you?\")\n            >>> with open(\"output.mp3\", \"wb\") as output: # open a binary (b) file to write (w)\n            ...     output.write(result.result)\n                    # or:\n                    result.write_to_file(output)\n            # Or you can just use write_to_file method:\n            >>> result.write_to_file(\"output.mp3\")\n            >>> print(\"Output of Text to Speech is available in output.mp3!\")\n\n            # the result is an MP3 file with the text to speech output\n        \n\n\n### Authentication\n\nLogin is **not** required\n\n### Response\n\n#### Example Response\n\n```json\n{\n    \"success\": true,\n    \"message\": \"Successfully processed your request\",\n    \"error\": null,\n    \"data\": {\n        \"service\": \"Google\",\n        \"source\": \"Hello world\",\n        \"sourceLang\": \"English\",\n        \"destLang\": \"Japanese\",\n        \"result\": \"こんにちは世界\"\n    }\n}\n\n```\n\n#### Returns\n\n| Field        | Description                      | Type   | Nullable  |\n| ----------   | -------------------------------- | ------ | --------- |\n| `service` | The translator used  | str      | False      |\n| `source` | The source text  | str      | False      |\n| `sourceLang` | The source language  | str      | False      |\n| `destLang` | The destination language  | str      | False      |\n| `result` | The translated text  | str      | False      |\n\n#### Possible Errors\n\n| Exception         | Description                      | Code   |\n| ---------------   | -------------------------------- | ------ |\n| `TRANSLATEPY_EXCEPTION` | Generic exception raised when an error occured on translatepy. This is the base class for the other exceptions raised by translatepy.  | 500  |\n| `NO_RESULT` | When no result is returned from the translator(s)  | 500  |\n| `PARAMETER_ERROR` | When a parameter is missing or invalid  | 500  |\n| `PARAMETER_TYPE_ERROR` | When a parameter is of the wrong type  | 500  |\n| `PARAMETER_VALUE_ERROR` | When a parameter is of the wrong value  | 500  |\n| `TRANSLATION_ERROR` | When a translation error occurs  | 500  |\n| `UNKNOWN_LANGUAGE` | When one of the provided language could not be understood by translatepy. Extra information like the string similarity and the most similar string are provided in `data`.  | 400  |\n| `UNKNOWN_TRANSLATOR` | When one of the provided translator/service could not be understood by translatepy. Extra information like the string similarity and the most similar string are provided in `data`.  | 400  |\n[Return to the Index](../Getting%20Started.md#index)","auth":{"type":"noauth"}},"response":[{"name":"Text to Speech","event":[],"request":{"method":"GET","header":[],"url":{"raw":"{{DOMAIN}}/tts?=text&source&speed&gender&translators","host":["{{DOMAIN}}"],"path":["tts"],"query":[{"key":"text","value":"<text:str>","description":"The text to convert to speech"},{"key":"source","value":"<source:str>","description":"The source language"},{"key":"speed","value":"<speed:int>","description":"The speed of the speech"},{"key":"gender","value":"<gender:str>","description":"The gender of the speech"},{"key":"translators","value":"<translators:TranslatorList>","description":"The translator(s) to use. When providing multiple translators, the names should be comma-separated."}]},"description":"\n> [translatepy/server/translation.py](../../translatepy/server/translation.py#L233)\n\n\n        Gives back the text to speech result for the given text\n\n        Args:\n          text: the given text\n          source_language: the source language\n\n        Returns:\n            the mp3 file as bytes\n\n        Example:\n            >>> from translatepy import Translator\n            >>> t = Translator()\n            >>> result = t.text_to_speech(\"Hello, how are you?\")\n            >>> with open(\"output.mp3\", \"wb\") as output: # open a binary (b) file to write (w)\n            ...     output.write(result.result)\n                    # or:\n                    result.write_to_file(output)\n            # Or you can just use write_to_file method:\n            >>> result.write_to_file(\"output.mp3\")\n            >>> print(\"Output of Text to Speech is available in output.mp3!\")\n\n            # the result is an MP3 file with the text to speech output\n        \n\n\n### Authentication\n\nLogin is **not** required\n\n### Response\n\n#### Example Response\n\n```json\n{\n    \"success\": true,\n    \"message\": \"Successfully processed your request\",\n    \"error\": null,\n    \"data\": {\n        \"service\": \"Google\",\n        \"source\": \"Hello world\",\n        \"sourceLang\": \"English\",\n        \"destLang\": \"Japanese\",\n        \"result\": \"こんにちは世界\"\n    }\n}\n\n```\n\n#### Returns\n\n| Field        | Description                      | Type   | Nullable  |\n| ----------   | -------------------------------- | ------ | --------- |\n| `service` | The translator used  | str      | False      |\n| `source` | The source text  | str      | False      |\n| `sourceLang` | The source language  | str      | False      |\n| `destLang` | The destination language  | str      | False      |\n| `result` | The translated text  | str      | False      |\n\n#### Possible Errors\n\n| Exception         | Description                      | Code   |\n| ---------------   | -------------------------------- | ------ |\n| `TRANSLATEPY_EXCEPTION` | Generic exception raised when an error occured on translatepy. This is the base class for the other exceptions raised by translatepy.  | 500  |\n| `NO_RESULT` | When no result is returned from the translator(s)  | 500  |\n| `PARAMETER_ERROR` | When a parameter is missing or invalid  | 500  |\n| `PARAMETER_TYPE_ERROR` | When a parameter is of the wrong type  | 500  |\n| `PARAMETER_VALUE_ERROR` | When a parameter is of the wrong value  | 500  |\n| `TRANSLATION_ERROR` | When a translation error occurs  | 500  |\n| `UNKNOWN_LANGUAGE` | When one of the provided language could not be understood by translatepy. Extra information like the string similarity and the most similar string are provided in `data`.  | 400  |\n| `UNKNOWN_TRANSLATOR` | When one of the provided translator/service could not be understood by translatepy. Extra information like the string similarity and the most similar string are provided in `data`.  | 400  |\n[Return to the Index](../Getting%20Started.md#index)"},"response":[],"status":"OK","code":200,"_postman_previewlanguage":"json","header":[],"cookie":[],"body":"{\n    \"success\": true,\n    \"message\": \"Successfully processed your request\",\n    \"error\": null,\n    \"data\": {\n        \"service\": \"Google\",\n        \"source\": \"Hello world\",\n        \"sourceLang\": \"English\",\n        \"destLang\": \"Japanese\",\n        \"result\": \"こんにちは世界\"\n    }\n}\n"}]}],"auth":{"type":"apikey","apikey":[{"key":"value","value":"{{TRANSLATEPY_TOKEN}}","type":"string"},{"key":"key","value":"Authorization","type":"string"}]}}